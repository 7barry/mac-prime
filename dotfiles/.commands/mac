#!/usr/bin/env bash

function mac() {
  case "$1" in

    #==============================================================================#
    # system preferences and apple menu
    #==============================================================================#

    # `mac info` | Get info about this Mac
    "info") neofetch ;;

    # `mac uptime`
    "uptime") uptime ;;

    # `mac screensaver` | Start screen saver
    "screensaver") open -a ScreenSaverEngine ;;

    # `mac display:off`
    "display:off") pmset displaysleepnow ;;

    # `mac sleep`
    "sleep") pmset sleepnow ;;

    # `mac restart`
    "restart") osascript -e 'tell app "loginwindow" to «event aevtrrst»' ;;

    # `mac shutdown`
    "shutdown") osascript -e 'tell app "loginwindow" to «event aevtrsdn»' ;;

    # `mac eject:all`
    "eject:all") osascript -e 'tell application "Finder" to eject (every disk whose ejectable is true)' ;;

    # `mac battery`
    "battery") pmset -g batt ;;

    #==============================================================================#
    # spotlight
    #==============================================================================#

    # `mac spotlight` | Check spotlight status
    "spotlight") mdutil -s / ;;

    # `mac spotlight:on` | Turn on Spotlight indexing
    "spotlight:on")
      echo "$(text green)Spotlight Enabled$(text)"
      sudo mdutil -a -i on
    ;;

    # `mac spotlight:off` | Turn off Spotlight indexing
    "spotlight:off")
      echo "$(text green)Spotlight Disabled$(text)"
      sudo mdutil -a -i off
    ;;

    # `mac spotlight:reindex` | Reindex Spotlight from scratch
    "spotlight:reindex")
      # Load new settings before rebuilding the index
      killall mds > /dev/null 2>&1
      # Make sure indexing is enabled for the main volume
      sudo mdutil -i on / > /dev/null
      # Rebuild the index from scratch
      sudo mdutil -E / > /dev/null
    ;;

    #==============================================================================#
    # wifi
    #==============================================================================#

    # `mac wifi`
    "wifi")
      echo "$(text green)Wi-Fi:$(text)"
      /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I
    ;;

    # `mac wifi:scan` | List WiFi networks in range.
    "wifi:scan") /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -s ;;

    # `mac wifi:on`
    "wifi:on")
      echo "$(text green)WiFi Enabled$(text)"
      networksetup -setairportpower ${_W_DEVICE} on
    ;;

    # `mac wifi:off`
    "wifi:off")
      echo "$(text green)WiFi Disabled$(text)"
      networksetup -setairportpower ${_W_DEVICE} off
    ;;

    #==============================================================================#
    # gatekeeper
    #==============================================================================#

    # `mac gatekeeper` | Get status of Gatekeeper
    "gatekeeper")
      echo "$(text green)Gatekeeper Status:$(text)"
      sudo spctl --status
    ;;

    # `mac gatekeeper:on` | Enable Gatekeeper
    "gatekeeper:on")
      echo "$(text green)Gatekeeper Enabled$(text)"
      sudo spctl --master-enable
    ;;

    # `mac gatekeeper:off` | Disable Gatekeeper
    "gatekeeper:off")
      echo "$(text green)Gatekeeper Disabled$(text)"
      sudo spctl --master-disable
    ;;

    # `mac gatekeeper:reset` | Reset Gatekeeper Rules
    "gatekeeper:reset") sudo spctl --reset-default ;;

  esac
}

alias ="mac"

complete -W "info uptime screensaver display:off sleep restart shutdown eject:all battery bluetooth bluetooth:on bluetooth:off spotlight spotlight:on spotlight:off spotlight:reindex wifi wifi:scan wifi:on wifi:off gatekeeper gatekeeper:on gatekeeper:off gatekeeper:reset" mac 
